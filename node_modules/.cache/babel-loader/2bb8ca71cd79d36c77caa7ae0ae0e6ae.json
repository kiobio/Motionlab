{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\motionlab\\\\motionlab\\\\src\\\\FirstPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FirstPage() {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [FirstResponse, setFirstResponse] = useState('');\n  const [secondResponse, setSecondResponse] = useState('');\n  const apiKey = \"8743f41d-98c6-4578-9d7b-611af96a16ba\";\n\n  async function fetchApi() {\n    const response = await fetch(`https://ralph.motionlab.io/api/interviewInfo?apiKey=${apiKey}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'aplication/json',\n        'Authorziation': 'Bearer ' + apiKey\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    setFirstResponse(data);\n  }\n\n  async function postApi() {\n    if (FirstResponse) {\n      setValues({\n        name: name,\n        email: email\n      });\n      const response = await fetch('https://ralph.motionlab.io/api/interviewTest', {\n        method: 'POST',\n        body: JSON.stringify(values),\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json',\n          'Authorization': 'Bearer' + FirstResponse.authorization.access_token\n        }\n      });\n      const data = await response.json();\n      setSecondResponse(data);\n    }\n  }\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FirstPage, \"ROL1+6ksbYzQF86oqyEeDescEFg=\");\n\n_c = FirstPage;\nexport default FirstPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirstPage\");","map":{"version":3,"sources":["D:/web/motionlab/motionlab/src/FirstPage.js"],"names":["useEffect","useState","FirstPage","values","setValues","name","email","setName","setEmail","FirstResponse","setFirstResponse","secondResponse","setSecondResponse","apiKey","fetchApi","response","fetch","method","headers","data","json","console","log","postApi","body","JSON","stringify","authorization","access_token"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAKA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;AACjCI,IAAAA,IAAI,EAAC,EAD4B;AAEjCC,IAAAA,KAAK,EAAC;AAF2B,GAAD,CAApC;AAIA,QAAK,CAACD,IAAD,EAAOE,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAK,CAACK,KAAD,EAAQE,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAK,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAK,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAMY,MAAM,GAAG,sCAAf;;AAGA,iBAAeC,QAAf,GAAyB;AACrB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDH,MAAO,EAA/D,EAAiE;AACzFI,MAAAA,MAAM,EAAE,KADiF;AAEzFC,MAAAA,OAAO,EAAC;AAEJ,kBAAU,kBAFN;AAGJ,wBAAe,iBAHX;AAIJ,yBAAkB,YAAYL;AAJ1B;AAFiF,KAAjE,CAA5B;AAUA,UAAMM,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAT,IAAAA,gBAAgB,CAACS,IAAD,CAAhB;AAEH;;AAED,iBAAeI,OAAf,GAAwB;AACpB,QAAId,aAAJ,EAAkB;AAEdL,MAAAA,SAAS,CAAC;AACNC,QAAAA,IAAI,EAACA,IADC;AAENC,QAAAA,KAAK,EAACA;AAFA,OAAD,CAAT;AAKJ,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAAD,EAAgD;AACxEC,QAAAA,MAAM,EAAC,MADiE;AAExEO,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevB,MAAf,CAFkE;AAGxEe,QAAAA,OAAO,EAAC;AACJ,oBAAW,kBADP;AAEJ,0BAAiB,kBAFb;AAGJ,2BAAkB,WAAWT,aAAa,CAACkB,aAAd,CAA4BC;AAHrD;AAHgE,OAAhD,CAA5B;AASA,YAAMT,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAR,MAAAA,iBAAiB,CAACO,IAAD,CAAjB;AAEH;AACA;;AACDnB,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,QAAQ;AAEX,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA9DQZ,S;;KAAAA,S;AA+DT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\n\r\n\r\n\r\nfunction FirstPage(){\r\n    const [values, setValues] = useState({\r\n        name:\"\",\r\n        email:\"\"\r\n    })\r\n    const[name, setName] = useState('')\r\n    const[email, setEmail] = useState('')\r\n\r\n    const[FirstResponse, setFirstResponse] = useState('')\r\n    const[secondResponse, setSecondResponse] = useState('')\r\n    const apiKey = \"8743f41d-98c6-4578-9d7b-611af96a16ba\"\r\n\r\n\r\n    async function fetchApi(){\r\n        const response = await fetch(`https://ralph.motionlab.io/api/interviewInfo?apiKey=${apiKey}`,{\r\n            method: 'GET',\r\n            headers:{\r\n                \r\n                'Accept': 'application/json',\r\n                'Content-type':'aplication/json',\r\n                'Authorziation' : 'Bearer ' + apiKey\r\n            }\r\n            \r\n        })\r\n        const data = await response.json()\r\n        console.log(data)\r\n        setFirstResponse(data)\r\n\r\n    }\r\n\r\n    async function postApi(){\r\n        if (FirstResponse){\r\n\r\n            setValues({\r\n                name:name,\r\n                email:email\r\n            })\r\n        \r\n        const response = await fetch('https://ralph.motionlab.io/api/interviewTest',{\r\n            method:'POST',\r\n            body: JSON.stringify(values),\r\n            headers:{\r\n                'Accept' : 'application/json',\r\n                'Content-type' : 'application/json',\r\n                'Authorization' : 'Bearer' + FirstResponse.authorization.access_token  \r\n            }\r\n        })\r\n        const data = await response.json()\r\n        setSecondResponse(data)\r\n\r\n    }\r\n    }\r\n    useEffect(()=>{\r\n        fetchApi()\r\n\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default FirstPage"]},"metadata":{},"sourceType":"module"}